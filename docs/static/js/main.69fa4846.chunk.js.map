{"version":3,"sources":["sheetjs.jsx","data.js","App.js","index.js"],"names":["SheetJSApp","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","cols","handleFile","bind","assertThisInitialized","exportFile","file","_this2","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","wb","XLSX","read","type","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","setState","make_cols","readAsArrayBuffer","aoa_to_sheet","book_new","book_append_sheet","writeFile","react_default","a","createElement","sheetjs_DragDropFile","className","sheetjs_DataInput","disabled","length","onClick","sheetjs_OutTable","React","Component","DragDropFile","_this3","onDrop","evt","stopPropagation","preventDefault","files","dataTransfer","onDragEnter","suppress","onDragOver","children","DataInput","_this4","handleChange","htmlFor","id","accept","SheetJSFT","onChange","OutTable","_this5","map","c","key","name","r","i","x","join","refstr","o","C","decode_range","encode_col","Data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","App","sheetjs","es","options","maintainAspectRatio","ReactDOM","render","src_App","document","getElementById","serviceWorker"],"mappings":"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","file":"static/js/main.69fa4846.chunk.js","sourcesContent":["/* xlsx.js (C) 2013-present  SheetJS -- http://sheetjs.com */\n/* Notes:\n   - usage: `ReactDOM.render( <SheetJSApp />, document.getElementById('app') );`\n   - xlsx.full.min.js is loaded in the head of the HTML page\n   - this script should be referenced with type=\"text/babel\"\n   - babel.js in-browser transpiler should be loaded before this script\n*/\n\nimport React from \"react\";\nimport XLSX from \"xlsx/xlsx\";\n\nclass SheetJSApp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [] /* Array of Arrays e.g. [[\"a\",\"b\"],[1,2]] */,\n            cols: [] /* Array of column objects e.g. { name: \"C\", K: 2 } */\n        };\n        this.handleFile = this.handleFile.bind(this);\n        this.exportFile = this.exportFile.bind(this);\n    }\n    handleFile(file /*:File*/) {\n        /* Boilerplate to set up FileReader */\n        const reader = new FileReader();\n        const rABS = !!reader.readAsBinaryString;\n        reader.onload = e => {\n            /* Parse data */\n            const bstr = e.target.result;\n            const wb = XLSX.read(bstr, { type: rABS ? \"binary\" : \"array\" });\n            /* Get first worksheet */\n            const wsname = wb.SheetNames[0];\n            const ws = wb.Sheets[wsname];\n            /* Convert array of arrays */\n            const data = XLSX.utils.sheet_to_json(ws, { header: 1 });\n            /* Update state */\n            this.setState({ data: data, cols: make_cols(ws[\"!ref\"]) });\n        };\n        if (rABS) reader.readAsBinaryString(file);\n        else reader.readAsArrayBuffer(file);\n    }\n    exportFile() {\n        /* convert state to workbook */\n        const ws = XLSX.utils.aoa_to_sheet(this.state.data);\n        const wb = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(wb, ws, \"SheetJS\");\n        /* generate XLSX file and send to client */\n        XLSX.writeFile(wb, \"sheetjs.xlsx\");\n    }\n    render() {\n        return (\n            <DragDropFile handleFile={this.handleFile}>\n                <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                        <DataInput handleFile={this.handleFile} />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                        <button\n                            disabled={!this.state.data.length}\n                            className=\"btn btn-success\"\n                            onClick={this.exportFile}\n                        >\n                            Export\n                        </button>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-xs-12\">\n                        <OutTable\n                            data={this.state.data}\n                            cols={this.state.cols}\n                        />\n                    </div>\n                </div>\n            </DragDropFile>\n        );\n    }\n}\n\n// if (typeof module !== \"undefined\") module.exports = SheetJSApp;\nexport default SheetJSApp;\n\n/* -------------------------------------------------------------------------- */\n\n/*\n  Simple HTML5 file drag-and-drop wrapper\n  usage: <DragDropFile handleFile={handleFile}>...</DragDropFile>\n    handleFile(file:File):void;\n*/\nclass DragDropFile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onDrop = this.onDrop.bind(this);\n    }\n    suppress(evt) {\n        evt.stopPropagation();\n        evt.preventDefault();\n    }\n    onDrop(evt) {\n        evt.stopPropagation();\n        evt.preventDefault();\n        const files = evt.dataTransfer.files;\n        if (files && files[0]) this.props.handleFile(files[0]);\n    }\n    render() {\n        return (\n            <div\n                onDrop={this.onDrop}\n                onDragEnter={this.suppress}\n                onDragOver={this.suppress}\n            >\n                {this.props.children}\n            </div>\n        );\n    }\n}\n\n/*\n  Simple HTML5 file input wrapper\n  usage: <DataInput handleFile={callback} />\n    handleFile(file:File):void;\n*/\nclass DataInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(e) {\n        const files = e.target.files;\n        if (files && files[0]) this.props.handleFile(files[0]);\n    }\n    render() {\n        return (\n            <form className=\"form-inline\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"file\">Spreadsheet</label>\n                    <input\n                        type=\"file\"\n                        className=\"form-control\"\n                        id=\"file\"\n                        accept={SheetJSFT}\n                        onChange={this.handleChange}\n                    />\n                </div>\n            </form>\n        );\n    }\n}\n\n/*\n  Simple HTML Table\n  usage: <OutTable data={data} cols={cols} />\n    data:Array<Array<any> >;\n    cols:Array<{name:string, key:number|string}>;\n*/\nclass OutTable extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div className=\"table-responsive\">\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            {this.props.cols.map(c => (\n                                <th key={c.key}>{c.name}</th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.data.map((r, i) => (\n                            <tr key={i}>\n                                {this.props.cols.map(c => (\n                                    <td key={c.key}>{r[c.key]}</td>\n                                ))}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\n/* list of supported file types */\nconst SheetJSFT = [\n    \"xlsx\",\n    \"xlsb\",\n    \"xlsm\",\n    \"xls\",\n    \"xml\",\n    \"csv\",\n    \"txt\",\n    \"ods\",\n    \"fods\",\n    \"uos\",\n    \"sylk\",\n    \"dif\",\n    \"dbf\",\n    \"prn\",\n    \"qpw\",\n    \"123\",\n    \"wb*\",\n    \"wq*\",\n    \"html\",\n    \"htm\"\n]\n    .map(function(x) {\n        return \".\" + x;\n    })\n    .join(\",\");\n\n/* generate an array of column objects */\nconst make_cols = refstr => {\n    let o = [],\n        C = XLSX.utils.decode_range(refstr).e.c + 1;\n    for (var i = 0; i < C; ++i)\n        o[i] = { name: XLSX.utils.encode_col(i), key: i };\n    return o;\n};\n","function Data() {\n  \n  return {\n    labels: ['January', 'February', 'March'],\n    datasets: [{\n      label: 'My First dataset',\n      backgroundColor: 'rgba(255,99,132,0.2)',\n      borderColor: 'rgba(255,99,132,1)',\n      borderWidth: 1,\n      hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n      hoverBorderColor: 'rgba(255,99,132,1)',\n      data: [65, 59, 80]\n    }]\n  };\n}\n\nexport default Data;","import React from 'react';\nimport './App.css';\nimport SheetJSApp from './sheetjs';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport Data from './data';\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm\">\n        <SheetJSApp />\n        </div>\n        <div className=\"col-sm\">\n        <Doughnut data={Data} options={{ maintainAspectRatio: false }}\n            />\n        </div>\n        <div className=\"col-sm\">\n        <Bar data={Data} options={{ maintainAspectRatio: false }}\n            />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from 'react-scripts/template/src/serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}